diff --git a/net/minecraft/command/CommandBase.java b/net/minecraft/command/CommandBase.java
index bdb2d64..7eccd17 100644
--- a/net/minecraft/command/CommandBase.java
+++ b/net/minecraft/command/CommandBase.java
@@ -424,7 +424,7 @@
          }
       } catch (RuntimeException var7) {
          try {
-            Map var2 = getBlockStatePropertyValueMap(var0, var1);
+            Map<IProperty<?>, Comparable<?>> var2 = getBlockStatePropertyValueMap(var0, var1);
             IBlockState var3 = var0.getDefaultState();
 
             for(Entry var5 : var2.entrySet()) {
@@ -438,8 +438,9 @@
       }
    }
 
-   private static <T extends Comparable<T>> IBlockState getBlockState(IBlockState var0, IProperty<T> var1, Comparable<?> var2) {
-      return var0.withProperty(var1, var2);
+   private static <T extends Comparable<T>> IBlockState getBlockState(IBlockState var0,
+                                                                      IProperty<T> var1, Comparable var2) {
+      return var0.withProperty(var1, (T)var2);
    }
 
    public static Predicate<IBlockState> convertArgToBlockStatePredicate(final Block var0, String var1) throws InvalidBlockStateException {
@@ -452,7 +453,7 @@
                }
             };
          } catch (RuntimeException var3) {
-            final Map var2 = getBlockStatePropertyValueMap(var0, var1);
+            final Map<IProperty<?>, Comparable<?>> var2 = getBlockStatePropertyValueMap(var0, var1);
             return new Predicate<IBlockState>() {
                public boolean apply(@Nullable IBlockState var1) {
                   if(var1 != null && var0 == var1.getBlock()) {
